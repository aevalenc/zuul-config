- pipeline:
    name: check
    description: |
      Newly uploaded patchsets enter this pipeline to receive an
      initial +/-1 Verified vote.
    manager: independent
    require:
      myaevzuul:
        label: zuul-check
    trigger:
      myaevzuul:
        # Run this pipeline on new/changed pull requests
        - event: pull_request
          action:
            - opened
            - changed
            - reopened
        # Run in response to a pull request comment "recheck"
        - event: pull_request
          action: comment
          comment: (?i).*check\s*$
    start:
      myaevzuul:
        check: "in_progress"
        comment: true
        # It is recommended to use the checks API for consistency with
        # other common CI tools that integrate with Github.  Results
        # will appear on the "checks" tab of PR and changes.  There is
        # generally no need to have Zuul leave comments when using the
        # checks API.
        #
        # The older status API appears inline with the PR and can be
        # enabled by uncommenting the "status:" in the various
        # sections below.  You should choose one or the other
        # depending on project preferences.
        #
        # status: "pending"
        #comment: true
    success:
      myaevzuul:
        check: "success"
        comment: true
    failure:
      myaevzuul:
        check: "failure"
        comment: true
    dequeue:
      myaevzuul:
        check: cancelled
        comment: true

- pipeline:
    name: gate
    description: |
      Changes that have been approved are enqueued in order in this
      pipeline, and if they pass tests, will be merged.
    manager: dependent
    post-review: True
    require:
      myaevzuul:
        # review:
        #   # Require an approval from user with write access (e.g. core-reviewer)
        #   - permission: write
        #     type: approved
        # Require label
        label: merge
        open: True
        current-patchset: True
    trigger:
      myaevzuul:
        - event: pull_request_review
          action: submitted
          state: approved
        - event: pull_request
          action: comment
          comment: (?i).*gate\s*$
        - event: pull_request_review
          action: dismissed
          state: request_changes
        - event: pull_request
          action: status
          status: ".*:success"
        - event: pull_request
          action: labeled
          label:
            - merge
    start:
      myaevzuul:
        check: "in_progress"
        comment: true
    success:
      myaevzuul:
        check: "success"
        comment: false
        merge: true
    failure:
      myaevzuul:
        check: "failure"
        comment: false
    dequeue:
      myaevzuul:
        check: cancelled
        comment: false
